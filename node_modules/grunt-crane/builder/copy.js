var promise = require('../util/promise');
var path = require('path');

module.exports = function (grunt) {

    var env = grunt.config('env');
    var src   = path.join(grunt.config('src'), env);
    var dest  = path.join(grunt.config('dest'), env);

    function Builder(id) {

        var defer = promise.Deferred();
        
        this.id = id;
        this.done = defer.done;
        this.fail = defer.fail;

        try {

            this.content = grunt.file.read(path.join(src, id));
        } catch (e) {

            defer.reject(e.message);
            return;
        }

        defer.resolve();
    }

    Builder.prototype.getMessage = function () {
        return this.message || '';
    };

    Builder.prototype.getContent = function () {
        return this.content || '';
    };

    Builder.prototype.build = function () {

        try {

            grunt.file.copy(path.join(src, this.id), path.join(dest, this.id));

        } catch (e) {

            this.message = e.message;
            return false;
        }

        return true;
    };

    return Builder;
};
