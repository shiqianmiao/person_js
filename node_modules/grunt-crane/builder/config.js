var promise = require('../util/promise');
var path = require('path');

function noImg (file) {

    return !(/(jpg|png|jpeg|gif)$/.test(file));
}

function noConfig(file) {

    return file !== 'config.json';
}

module.exports = function (grunt) {

    var env = grunt.config('env');
    var src   = path.join(grunt.config('src'), env);
    var dest  = path.join(grunt.config('dest'), env);

    function Builder(id) {

        var defer = promise.Deferred();

        this.id = id;

        this.done = defer.done;
        this.fail = defer.fail;

        defer.resolve();
    }

    Builder.prototype.getContent = function () {

        // 确保每次都被编译
        return this.content || '';
    };

    Builder.prototype.getMessage = function () {
        return this.message || '';
    };

    Builder.prototype.build = function () {

        try {

            var config = grunt.file.readJSON(path.join(src, this.id));

            var cacheExpire = grunt.config('cacheExpire');

            config.cacheExpire = cacheExpire;
            config.rootpaths = grunt.config('rootpaths');
            config.combine = {};
            config.version = {};

            var files = grunt.db.files;
            var lastTimestamp = Math.round(Date.now()/1000) - cacheExpire;

            Object.keys(files).filter(noConfig).forEach(function (name) {
                var file = files[name];

                if (file.timestamp && file.timestamp > lastTimestamp) {
                    config.version[name] = file.timestamp;
                }

                if (file.children && file.children.length && file.children.filter(noImg).length) {
                    config.combine[name] = file.children;
                }
            });

            config.version['config.js'] = config.version['config.json'] = Math.round(Date.now()/1000);

            var content = JSON.stringify(config, null, 4);

            this.content = content;

            grunt.file.write(path.join(dest, this.id), content);

            var versionTemplate = require('../util/template')(grunt.config.getRaw(['versionTemplate'])).toString();

            grunt.file.write(path.join(dest, 'config.js'), 'G.config(' + JSON.stringify(config) + ');G.config({versionTemplate:' + versionTemplate + '});');

        } catch (e) {

            this.message = e.message;
            return false;
        }

        return true;
    };

    return Builder;
};
