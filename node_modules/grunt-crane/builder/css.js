var path   = require('path');
var rework = require('rework');
var promise = require('../util/promise');

var HTTP_FILE_RE = /^(https?:\/\/.*?\/)/;
var CMB_CSS_RE = /\.cmb\.css$/;
var TRIM_RE = /^\s*(.*?)\s*$/;

var trim = function (str) {

    return str.replace(TRIM_RE, function (match , url) {
        return url;
    });
}

module.exports = function (grunt) {

    var env = grunt.config('env');
    var src   = path.join(grunt.config('src'), env);
    var dest  = path.join(grunt.config('dest'), env);
    var minify = grunt.option('compress');
    var rootpaths = grunt.config('rootpaths');
    var cacheExpire = grunt.config('cacheExpire');

    function Builder (id) {

        var self = this;
        var defer = promise.Deferred();

        try {

            this.id = id;
            this.children = [];
            this.done = defer.done;
            this.fail = defer.fail;
            this.content = grunt.file.read(path.join(src, id));

            // 合并文件，纪录css children
            if (CMB_CSS_RE.test(this.id)) {

                var images = [];

                this.children = this.content.split(/\r?\n/).map(function (file) {
                    return trim(file);
                }).filter(function (file) {
                        return !!file;
                });

            // 单文件，记录图片children
            } else {

                rework(this.content).use(rework.url(function (url) {

                        var match = url.match(HTTP_FILE_RE);

                        // 外部图片不计入children
                        if (match && rootpaths.indexOf(match[1]) === -1) {
                            return url;
                        }

                        // http://xxx.com/xxx/xxx/xxx.jpg
                        if (match) {
                            return self.children.push(url.replace(match[1], ''));
                        }
                        // ../xxx.jpg or ./xxx.jpg
                        else if (url.substr(0, 1) === '.') {
                            return self.children.push(path.normalize(path.dirname(self.id) + '/' + url));
                        }
                        // /xxx/xxx/xxx.jpg
                        else if (url.substr(0, 1) === '/') {
                            return self.children.push(url.substr(1));
                        }
                        // xxx.jpg
                        else {
                            return self.children.push(path.dirname(self.id) + '/' + url);
                        }
                }));
            }

            this.children = grunt.util._.uniq(this.children);

        } catch (e) {

            defer.reject(e.message);
            return;
        }

        defer.resolve();
    }

    Builder.prototype.isCmbFile = function() {

        // css文件都认为是合并文件（图片也算是children）
        return true;
    };

    Builder.prototype.getChildren = function() {
        return this.children || [];
    };

    Builder.prototype.getMessage = function () {
        return this.message || '';
    };

    Builder.prototype.getContent = function () {
        return this.content || '';
    };

    Builder.prototype.build = function() {

        var self = this;
        var content = '';
        var dir = path.dirname(this.id);

        try {
            // 合并文件fix url
            if (CMB_CSS_RE.test(this.id)) {
                content = this.children.map(function (file) {

                    var c = grunt.file.read(path.join(src, file));
                    var d = path.dirname(file);

                    // 不同目录
                    if (dir != d) {
                        c = rework(c).use(rework.url(function (url) {

                            var match = url.match(HTTP_FILE_RE);

                            if (!match) {
                                url = path.relative(dir, path.normalize(path.join(d, url)));
                            }

                            return url;
                        })).toString();
                    }
                    return c;
                }).join('\n');
            } else {
                content = this.content;
            }

            // 图片添加版本号
            content = rework(content).use(rework.url(function (url) {

                    var filepath, timestamp;
                    var match = url.match(HTTP_FILE_RE);

                    if (match && rootpaths.indexOf(match[1]) === -1) {
                        return url;
                    }

                    if (match) {

                        filepath = url.replace(match[1], '');

                    } else {

                        filepath = path.normalize(path.dirname(self.id) + '/' + url);
                    }

                    if (grunt.db.files[filepath]) {

                        timestamp = grunt.db.files[filepath]['timestamp'];
                    } else {
                        timestamp = '404'; // 不存在的图片
                    }

                    return grunt.template.process(grunt.config.getRaw('versionTemplate'), {
                        data: {
                            version :  timestamp,
                            url : require('../util/url').parseURL(url)
                        }
                    });
                })).toString();

            if (minify) {
                content = require('cssmin')(content);
            }

            this.content = content;
            grunt.file.write(path.join(dest, this.id), content);

        } catch (e) {

            this.message = e.message;
            return false;
        }

        return true;
    };

    return Builder;
};